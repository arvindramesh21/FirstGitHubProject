{\rtf1\ansi\ansicpg1252\cocoartf1343\cocoasubrtf140
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\listtable{\list\listtemplateid1\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{hyphen\}}{\leveltext\leveltemplateid1\'01\uc0\u8259 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{hyphen\}}{\leveltext\leveltemplateid2\'01\uc0\u8259 ;}{\levelnumbers;}\fi-360\li1440\lin1440 }{\listname ;}\listid1}}
{\*\listoverridetable{\listoverride\listid1\listoverridecount0\ls1}}
\paperw11900\paperh16840\margl1440\margr1440\vieww16100\viewh11760\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural

\f0\fs24 \cf0 #define PORT_A \'91A\'92\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural
\cf0 #define PORT_B \'91B\'92\
#define PORT_C \'91C\'92\
#define PORT_D \'91D\'92\
\
#define PIN_0 0x01\
#define PIN_1 0x02\
#define PIN_2 0x04\
#define PIN_3 0x08\
#define PIN_4 0x10\
#define PIN_5 0x20\
#define PIN_6 0x40\
#define PIN_7 0x80\
\
#define VALUE_1 1\
#define VALUE_0 0\
\
#define TRIGGER_RISING_EDGE 1\
#define TRIGGER_FALLING_EDGE 0\
\
\
\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural
\cf0 static void GPIO_Port_Address_Select( uchar Port, uchar *pPortDirection, uchar *pPortAltFunc1, uchar *pPortAltFunc2, uchar *pPortData )\
\{\
	if( Port == PORT_A)\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural
\cf0 	\{\
		*pPortDirection = PA_DDR;\
		*pPortAltFunc1 = PA_ALT1;\
		*pPortAltFunc2 = PA_ALT2;\
		*pPortData	= PA_DR;\
	\}\
	else if( Port == PORT_B)\
	\{\
		*pPortDirection = PB_DDR;\
		*pPortAltFunc1 = PB_ALT1;\
		*pPortAltFunc2 = PB_ALT2;\
		*pPortData	= PB_DR;\
	\}\
	else if( Port == PORT_C)\
	\{\
		*pPortDirection = PC_DDR;\
		*pPortAltFunc1 = PC_ALT1;\
		*pPortAltFunc2 = PC_ALT2;\
		*pPortData	= PC_DR;\
	\}\
	else if( Port == PORT_D )\
	\{\
		*pPortDirection = PD_DDR;\
		*pPortAltFunc1 = PD_ALT1;\
		*pPortAltFunc2 = PD_ALT2;\
		*pPortData	= PD_DR;\
	\}\
\
	\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural
\cf0 \}\
\
\
\
void GPIO_Configure_Mode1_Standard_Output( uchar Port, uchar Pin, uchar Value )\
\{\
	uchar PortDirection, PortAltFunc1, PortAltFunct2, PortData;\
\
	if( (Port >= PORT_A) && (Port <= PORT_D)\
	\{\
		GPIO_Port_Address_Select( Port, &PortDirection, &PortAltFunc1, &PortAltFunct2, &PortData );\
	\}\
	else\
		return; //\'97\'97\'97\'97\'97\'97\'97\'97\'97>>>\
\
	if( (Pin == PIN_0) || (Pin == PIN_1) || (Pin == PIN_2) || (Pin == PIN_3) || (Pin == PIN_4) || (Pin == PIN_5) || (Pin == PIN_6) || (Pin == PIN_7) )\
	\{\
\
		PortDirection &= ~Pin;\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural
\cf0 		PortAltFunc1 &= ~Pin;\
		PortAltFunc2 &= ~Pin;\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural
\cf0 \
	\}\
	else\
		return; //\'97\'97\'97\'97\'97\'97>>>\
\
	if( Value == VALUE_0 )\
		PortData &= ~Pin;\
\pard\tx220\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\li720\fi-720\pardirnatural
\ls1\ilvl0\cf0 {\listtext	\uc0\u8259 	}else if( Value == VALUE_1 )\
\pard\tx940\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\li1440\fi-1440\pardirnatural
\ls1\ilvl1\cf0 {\listtext	\uc0\u8259 	}PortData |= Pin;\
\pard\tx220\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\li720\fi-720\pardirnatural
\ls1\ilvl0\cf0 {\listtext	\uc0\u8259 	}else \
{\listtext	\uc0\u8259 	}          return; //\'97\'97\'97\'97\'97\'97>>>\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural
\cf0 			\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural
\cf0 \}\
\
\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural
\cf0 void GPIO_Configure_Mode2_Standard_Input( uchar Port, uchar Pin  )\
\{\
	uchar PortDirection, PortAltFunc1, PortAltFunct2, PortData;\
\
	if( (Port >= PORT_A) && (Port <= PORT_D)\
	\{\
		GPIO_Port_Address_Select( Port, &PortDirection, &PortAltFunc1, &PortAltFunct2, &PortData );\
	\}\
	else\
		return; //\'97\'97\'97\'97\'97\'97\'97\'97\'97>>>\
\
	if( (Pin == PIN_0) || (Pin == PIN_1) || (Pin == PIN_2) || (Pin == PIN_3) || (Pin == PIN_4) || (Pin == PIN_5) || (Pin == PIN_6) || (Pin == PIN_7) )\
	\{\
\
		PortDirection |= Pin;\
		PortAltFunc1 &= ~Pin;\
		PortAltFunc2 &= ~Pin;\
\
	\}\
	else\
		return; //\'97\'97\'97\'97\'97\'97>>>\
			\
\}\
\
\
void GPIO_Configure_Mode9_Edge_Triggered_Interrupt( uchar Port, uchar Pin, uchar Trigger )\
\{\
	uchar PortDirection, PortAltFunc1, PortAltFunct2, PortData;\
\
	if( (Port >= PORT_A) && (Port <= PORT_D)\
	\{\
		GPIO_Port_Address_Select( Port, &PortDirection, &PortAltFunc1, &PortAltFunct2, &PortData );\
	\}\
	else\
		return; //\'97\'97\'97\'97\'97\'97\'97\'97\'97>>>\
\
	if( (Pin == PIN_0) || (Pin == PIN_1) || (Pin == PIN_2) || (Pin == PIN_3) || (Pin == PIN_4) || (Pin == PIN_5) || (Pin == PIN_6) || (Pin == PIN_7) )\
	\{\
\
		PortDirection |= Pin;\
		PortAltFunc1 |= Pin;\
		PortAltFunc2 |= Pin;\
\
	\}\
	else\
		return; //\'97\'97\'97\'97\'97\'97>>>\
\
	if( Trigger == TRIGGER_RISING_EDGE )\
		PortData |= Pin;\
	else if( Trigger == TRIGGER_FALLING_EDGE )\
		PortData &= ~Pin;\
	else\
		return; //\'97\'97\'97\'97\'97\'97\'97\'97\'97>>>\
			\
\}\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural
\cf0 \
void main( void )\
\{\
	GPIO_Configure_Mode1_Standard_Output( PORT_A, PIN_0, VALUE_0 ); //filter wheel motor off\
	GPIO_Configure_Mode1_Standard_Output( PORT_A, PIN_1, VALUE_1 ); //heartbeat LED on\
	GPIO_Configure_Mode2_Standard_Input( PORT_A, PIN_2 ); //gate\
	GPIO_Configure_Mode9_Edge_Triggered_Interrupt( PORT_A, PIN_4, TRIGGER_RISING_EDGE ); //filter wheel home\
	GPIO_Configure_Mode9_Edge_Triggered_Interrupt( PORT_A, PIN_5, TRIGGER_FALLING_EDGE); //filter wheel count\
\
\
\}}